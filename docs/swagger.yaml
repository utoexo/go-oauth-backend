definitions:
  auth.ClientRegistrationRequest:
    properties:
      client_name:
        type: string
      grant_types:
        items:
          type: string
        type: array
      redirect_uris:
        items:
          type: string
        type: array
      response_types:
        items:
          type: string
        type: array
      scope:
        type: string
      token_endpoint_auth_method:
        type: string
    required:
    - client_name
    - grant_types
    - redirect_uris
    - response_types
    - scope
    - token_endpoint_auth_method
    type: object
  auth.ClientRegistrationResponse:
    properties:
      client_id:
        type: string
      client_name:
        type: string
      client_secret:
        type: string
      grant_types:
        items:
          type: string
        type: array
      redirect_uris:
        items:
          type: string
        type: array
      response_types:
        items:
          type: string
        type: array
      scope:
        type: string
      token_endpoint_auth_method:
        type: string
    type: object
  auth.OAuthClientPublic:
    properties:
      client_id:
        example: demo-client
        type: string
      redirect_uri:
        example: http://localhost:8081/callback
        type: string
    type: object
  auth.TokenResponse:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      expires_in:
        example: 3600
        type: integer
      token_type:
        example: Bearer
        type: string
    type: object
  models.CreateTaskRequest:
    properties:
      description:
        example: Task 1 description
        type: string
      status:
        example: pending
        type: string
      title:
        example: Task 1
        type: string
    type: object
  models.Task:
    properties:
      created_at:
        example: "2025-06-18T10:00:00Z"
        type: string
      description:
        example: Write Swagger docs for the API
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      status:
        description: e.g., pending, completed
        example: pending
        type: string
      title:
        example: Write documentation
        type: string
      updated_at:
        example: "2025-06-18T10:00:00Z"
        type: string
    type: object
  models.UpdateTaskRequest:
    properties:
      description:
        example: Updated Task 1 description
        type: string
      status:
        example: completed
        type: string
      title:
        example: Updated Task 1
        type: string
    type: object
info:
  contact: {}
  description: Professional, production-quality RESTful API for task management with
    OAuth2 and iSHARE compliance.
  title: iShare Task Management API
  version: "1.0"
paths:
  /authorize:
    get:
      description: Initiates the OAuth2 Authorization Code Flow. Redirects with code
        and state.
      parameters:
      - description: Client ID
        in: query
        name: client_id
        required: true
        type: string
      - description: Redirect URI
        in: query
        name: redirect_uri
        required: true
        type: string
      - description: Response Type (must be 'code')
        in: query
        name: response_type
        required: true
        type: string
      - description: CSRF State
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to client redirect_uri with code and state
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OAuth2 Authorization Endpoint
      tags:
      - OAuth2
  /clients:
    get:
      description: Returns the list of registered OAuth clients (excluding secrets)
        for testing/demo purposes.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.OAuthClientPublic'
            type: array
      summary: List available OAuth clients
      tags:
      - OAuth2
  /register:
    post:
      consumes:
      - application/json
      description: Register a new OAuth client following iSHARE specifications
      parameters:
      - description: Client Registration Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.ClientRegistrationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.ClientRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new OAuth client
      tags:
      - OAuth2
  /tasks:
    get:
      description: Retrieves all tasks. Requires JWT access token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Creates a new task. Requires JWT access token.
      parameters:
      - description: Task to create
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new task
      tags:
      - Tasks
  /tasks/{id}:
    delete:
      description: Deletes a task by ID. Requires JWT access token.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a task
      tags:
      - Tasks
    get:
      description: Retrieves a task by its ID. Requires JWT access token.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a task by ID
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Updates an existing task. Requires JWT access token.
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      - description: Task fields to update
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a task
      tags:
      - Tasks
  /token:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Exchanges an authorization code for a JWT access token
      parameters:
      - description: Grant Type
        in: formData
        name: grant_type
        required: true
        type: string
      - description: Authorization Code
        in: formData
        name: code
        required: true
        type: string
      - description: Redirect URI
        in: formData
        name: redirect_uri
        required: true
        type: string
      - description: Client ID
        in: formData
        name: client_id
        required: true
        type: string
      - description: Client Secret
        in: formData
        name: client_secret
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: OAuth2 Token Endpoint
      tags:
      - OAuth2
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token."
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
